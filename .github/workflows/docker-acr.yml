# GitHub Actions workflow to build and push Docker image to Azure Container Registry (ACR)
name: Build and Push Docker image to ACR

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    outputs:
      image-tag: ${{ steps.set-tag.outputs.image-tag }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Azure Container Registry
        uses: azure/docker-login@v1
        with:
          login-server: ${{ secrets.ACR_LOGIN_SERVER }}
          username: ${{ secrets.ACR_USERNAME }}
          password: ${{ secrets.ACR_PASSWORD }}

      - name: Set image tag
        id: set-tag
        run: echo "image-tag=${{ github.run_id }}" >> $GITHUB_OUTPUT

      - name: Build Docker image (no push)
        uses: docker/build-push-action@v5
        with:
          context: .
          push: false
          tags: |
            vite-react-app:local
          no-cache: true

      - name: Install Trivy
        run: |
          sudo apt-get update && \
          sudo apt-get install -y wget apt-transport-https gnupg lsb-release && \
          wget -qO - https://aquasecurity.github.io/trivy-repo/deb/public.key | sudo apt-key add - && \
          echo deb https://aquasecurity.github.io/trivy-repo/deb $(lsb_release -sc) main | sudo tee -a /etc/apt/sources.list.d/trivy.list && \
          sudo apt-get update && \
          sudo apt-get install -y trivy

      - name: Scan Docker image for vulnerabilities
        uses: aquasecurity/trivy-action@0.28.0
        with:
          image-ref: vite-react-app:local
          format: table
          exit-code: 1
          ignore-unfixed: true
          severity: CRITICAL,HIGH

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: |
            ${{ secrets.ACR_LOGIN_SERVER }}/vite-react-app:latest
            ${{ secrets.ACR_LOGIN_SERVER }}/vite-react-app:${{ github.run_id }}
          no-cache: true

  deploy-to-aks:
    runs-on: ubuntu-latest
    needs: build-and-push
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up kubectl
        uses: azure/setup-kubectl@v3
        with:
          version: 'latest'

      - name: Azure Login
        uses: azure/login@v2
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Set AKS context
        uses: azure/aks-set-context@v3
        with:
          resource-group: ${{ secrets.AKS_RESOURCE_GROUP }}
          cluster-name: ${{ secrets.AKS_CLUSTER_NAME }}

      - name: Update image in deployment manifest
        run: |
          sed -i "s|<ACR_LOGIN_SERVER>|${{ secrets.ACR_LOGIN_SERVER }}|g" k8s-deployment.yaml
          sed -i "s|:<BUILD_ID>|:${{ needs.build-and-push.outputs.image-tag }}|g" k8s-deployment.yaml

      - name: Deploy to AKS (existing namespace)
        run: kubectl apply -f k8s-deployment.yaml --namespace ${{ secrets.AKS_NAMESPACE }}
